{"ast":null,"code":"var _jsxFileName = \"/Users/samreen.zaidi/Downloads/react-node-app/client/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [editableId, setEditableId] = useState(null);\n  const [editedTask, setEditedTask] = useState(\"\");\n  const [editedStatus, setEditedStatus] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [newStatus, setNewStatus] = useState(\"\");\n  const [newDeadline, setNewDeadline] = useState(\"\");\n  const [editedDeadline, setEditedDeadline] = useState(\"\");\n\n  // Fetch tasks from database \n  useEffect(() => {\n    axios.get('http://localhost:3001/getTodoList').then(result => {\n      setTodoList(result.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // Function to toggle the editable state for a specific row \n  const toggleEditable = id => {\n    const rowData = todoList.find(data => data._id === id);\n    if (rowData) {\n      setEditableId(id);\n      setEditedTask(rowData.task);\n      setEditedStatus(rowData.status);\n      setEditedDeadline(rowData.deadline || \"\");\n    } else {\n      setEditableId(null);\n      setEditedTask(\"\");\n      setEditedStatus(\"\");\n      setEditedDeadline(\"\");\n    }\n  };\n\n  // // Function to add task to the database \n  // const addTask = (e) => { \n  // \te.preventDefault(); \n  // \tif (!newTask || !newStatus || !newDeadline) { \n  // \t\talert(\"All fields must be filled out.\"); \n  // \t\treturn; \n  // \t} \n\n  // \taxios.post('http://localhost:3001/addTodoList', { task: newTask, status: newStatus, deadline: newDeadline }) \n  // \t\t.then(() => { \n  //             axios.get('http://localhost:3001/getTodoList') \n  //             .then(result => { \n  //                 setTodoList(result.data) \n  //             }) \n  //             .catch(err => console.log(err))   \n  //         }) \n  // \t\t.catch(err => console.log(err)); \n  // } \n\n  // // Function to save edited data to the database \n  // const saveEditedTask = (id) => { \n  // \tconst editedData = { \n  // \t\ttask: editedTask, \n  // \t\tstatus: editedStatus, \n  // \t\tdeadline: editedDeadline, \n  // \t}; \n\n  // \t// If the fields are empty \n  // \tif (!editedTask || !editedStatus || !editedDeadline) { \n  // \t\talert(\"All fields must be filled out.\"); \n  // \t\treturn; \n  // \t} \n\n  // \t// Updating edited data to the database through updateById API \n  // \taxios.post('http://localhost:3001/updateTodoList/' + id, editedData) \n  // \t\t.then(result => { \n  // \t\t\tconsole.log(result); \n  // \t\t\tsetEditableId(null); \n  // \t\t\tsetEditedTask(\"\"); \n  // \t\t\tsetEditedStatus(\"\"); \n  // \t\t\tsetEditedDeadline(\"\"); // Clear the edited deadline \n  // \t\t}) \n  // \t\t.catch(err => console.log(err)); \n  // } \n\n  // // Delete task from database \n  // const deleteTask = (id) => { \n  // \taxios.delete('http://localhost:3001/deleteTodoList/' + id) \n  // \t\t.then(() => { \n  // \t\t\taxios.get('http://localhost:3001/getTodoList') \n  //             .then(result => { \n  //                 setTodoList(result.data) \n  //             }) \n  //             .catch(err => console.log(err))  \n  // \t\t}) \n  // \t\t.catch(err => console.log(err)) \n  // } \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-7\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Deadline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 8\n            }, this), Array.isArray(todoList) ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: todoList.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editableId === data._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: editedTask,\n                    onChange: e => setEditedTask(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 14\n                  }, this) : data.task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editableId === data._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: editedStatus,\n                    onChange: e => setEditedStatus(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 14\n                  }, this) : data.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editableId === data._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"datetime-local\",\n                    className: \"form-control\",\n                    value: editedDeadline,\n                    onChange: e => setEditedDeadline(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 14\n                  }, this) : data.deadline ? new Date(data.deadline).toLocaleString() : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [editableId === data._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success btn-sm\",\n                    onClick: () => saveEditedTask(data._id),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 14\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-sm\",\n                    onClick: () => toggleEditable(data._id),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger btn-sm ml-1\",\n                    onClick: () => deleteTask(data._id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 12\n                }, this)]\n              }, data._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"4\",\n                  children: \"Loading products...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"bg-light p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: \"Enter Task\",\n              onChange: e => setNewTask(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: \"Enter Status\",\n              onChange: e => setNewStatus(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"datetime-local\",\n              onChange: e => setNewDeadline(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addTask,\n            className: \"btn btn-success btn-sm\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n}\n_s(Todo, \"BxOoWAkFj9bt2Vxi539wcvjg5R0=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Todo","_s","todoList","setTodoList","editableId","setEditableId","editedTask","setEditedTask","editedStatus","setEditedStatus","newTask","setNewTask","newStatus","setNewStatus","newDeadline","setNewDeadline","editedDeadline","setEditedDeadline","get","then","result","data","catch","err","console","log","toggleEditable","id","rowData","find","_id","task","status","deadline","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","type","value","onChange","e","target","Date","toLocaleString","onClick","saveEditedTask","deleteTask","colSpan","placeholder","addTask","_c","$RefreshReg$"],"sources":["/Users/samreen.zaidi/Downloads/react-node-app/client/src/components/Todo.js"],"sourcesContent":["import axios from \"axios\"; \nimport React from \"react\"; \nimport { useEffect, useState } from \"react\"; \n\nfunction Todo() { \n\tconst [todoList, setTodoList] = useState([]); \n\tconst [editableId, setEditableId] = useState(null); \n\tconst [editedTask, setEditedTask] = useState(\"\"); \n\tconst [editedStatus, setEditedStatus] = useState(\"\"); \n\tconst [newTask, setNewTask] = useState(\"\"); \n\tconst [newStatus, setNewStatus] = useState(\"\"); \n\tconst [newDeadline, setNewDeadline] = useState(\"\"); \n\tconst [editedDeadline, setEditedDeadline] = useState(\"\"); \n\n\t// Fetch tasks from database \n\tuseEffect(() => { \n\t\taxios.get('http://localhost:3001/getTodoList') \n\t\t\t.then(result => { \n\t\t\t\tsetTodoList(result.data) \n\t\t\t}) \n\t\t\t.catch(err => console.log(err)) \n\t}, []) \n\n\t// Function to toggle the editable state for a specific row \n\tconst toggleEditable = (id) => { \n\t\tconst rowData = todoList.find((data) => data._id === id); \n\t\tif (rowData) { \n\t\t\tsetEditableId(id); \n\t\t\tsetEditedTask(rowData.task); \n\t\t\tsetEditedStatus(rowData.status); \n\t\t\tsetEditedDeadline(rowData.deadline || \"\"); \n\t\t} else { \n\t\t\tsetEditableId(null); \n\t\t\tsetEditedTask(\"\"); \n\t\t\tsetEditedStatus(\"\"); \n\t\t\tsetEditedDeadline(\"\"); \n\t\t} \n\t}; \n\n\n\t// // Function to add task to the database \n\t// const addTask = (e) => { \n\t// \te.preventDefault(); \n\t// \tif (!newTask || !newStatus || !newDeadline) { \n\t// \t\talert(\"All fields must be filled out.\"); \n\t// \t\treturn; \n\t// \t} \n\n\t// \taxios.post('http://localhost:3001/addTodoList', { task: newTask, status: newStatus, deadline: newDeadline }) \n\t// \t\t.then(() => { \n    //             axios.get('http://localhost:3001/getTodoList') \n    //             .then(result => { \n    //                 setTodoList(result.data) \n    //             }) \n    //             .catch(err => console.log(err))   \n    //         }) \n\t// \t\t.catch(err => console.log(err)); \n\t// } \n\n\t// // Function to save edited data to the database \n\t// const saveEditedTask = (id) => { \n\t// \tconst editedData = { \n\t// \t\ttask: editedTask, \n\t// \t\tstatus: editedStatus, \n\t// \t\tdeadline: editedDeadline, \n\t// \t}; \n\n\t// \t// If the fields are empty \n\t// \tif (!editedTask || !editedStatus || !editedDeadline) { \n\t// \t\talert(\"All fields must be filled out.\"); \n\t// \t\treturn; \n\t// \t} \n\n\t// \t// Updating edited data to the database through updateById API \n\t// \taxios.post('http://localhost:3001/updateTodoList/' + id, editedData) \n\t// \t\t.then(result => { \n\t// \t\t\tconsole.log(result); \n\t// \t\t\tsetEditableId(null); \n\t// \t\t\tsetEditedTask(\"\"); \n\t// \t\t\tsetEditedStatus(\"\"); \n\t// \t\t\tsetEditedDeadline(\"\"); // Clear the edited deadline \n\t// \t\t}) \n\t// \t\t.catch(err => console.log(err)); \n\t// } \n\n\n\t// // Delete task from database \n\t// const deleteTask = (id) => { \n\t// \taxios.delete('http://localhost:3001/deleteTodoList/' + id) \n\t// \t\t.then(() => { \n\t// \t\t\taxios.get('http://localhost:3001/getTodoList') \n    //             .then(result => { \n    //                 setTodoList(result.data) \n    //             }) \n    //             .catch(err => console.log(err))  \n\t// \t\t}) \n\t// \t\t.catch(err => console.log(err)) \n\t// } \n\n\treturn ( \n\t\t<div className=\"container mt-5\"> \n\t\t\t<div className=\"row\"> \n\t\t\t\t<div className=\"col-md-7\"> \n\t\t\t\t\t<h2 className=\"text-center\">Todo List</h2> \n\t\t\t\t\t<div className=\"table-responsive\"> \n\t\t\t\t\t\t<table className=\"table table-bordered\"> \n\t\t\t\t\t\t\t<thead className=\"table-primary\"> \n\t\t\t\t\t\t\t\t<tr> \n\t\t\t\t\t\t\t\t\t<th>Task</th> \n\t\t\t\t\t\t\t\t\t<th>Status</th> \n\t\t\t\t\t\t\t\t\t<th>Deadline</th> \n\t\t\t\t\t\t\t\t\t<th>Actions</th> \n\t\t\t\t\t\t\t\t</tr> \n\t\t\t\t\t\t\t</thead> \n\t\t\t\t\t\t\t{Array.isArray(todoList) ? ( \n\t\t\t\t\t\t\t\t<tbody> \n\t\t\t\t\t\t\t\t\t{todoList.map((data) => ( \n\t\t\t\t\t\t\t\t\t\t<tr key={data._id}> \n\t\t\t\t\t\t\t\t\t\t\t<td> \n\t\t\t\t\t\t\t\t\t\t\t\t{editableId === data._id ? ( \n\t\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={editedTask} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEditedTask(e.target.value)} \n\t\t\t\t\t\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t\t\t\t\t\t) : ( \n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.task \n\t\t\t\t\t\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t\t\t\t\t\t<td> \n\t\t\t\t\t\t\t\t\t\t\t\t{editableId === data._id ? ( \n\t\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={editedStatus} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEditedStatus(e.target.value)} \n\t\t\t\t\t\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t\t\t\t\t\t) : ( \n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.status \n\t\t\t\t\t\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t\t\t\t\t\t<td> \n\t\t\t\t\t\t\t\t\t\t\t\t{editableId === data._id ? ( \n\t\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={editedDeadline} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEditedDeadline(e.target.value)} \n\t\t\t\t\t\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t\t\t\t\t\t) : ( \n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.deadline ? new Date(data.deadline).toLocaleString() : ''\n\t\t\t\t\t\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t\t\t\t\t\t</td> \n\n\t\t\t\t\t\t\t\t\t\t\t<td> \n\t\t\t\t\t\t\t\t\t\t\t\t{editableId === data._id ? ( \n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-success btn-sm\" onClick={() => saveEditedTask(data._id)}> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSave \n\t\t\t\t\t\t\t\t\t\t\t\t\t</button> \n\t\t\t\t\t\t\t\t\t\t\t\t) : ( \n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-sm\" onClick={() => toggleEditable(data._id)}> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit \n\t\t\t\t\t\t\t\t\t\t\t\t\t</button> \n\t\t\t\t\t\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger btn-sm ml-1\" onClick={() => deleteTask(data._id)}> \n\t\t\t\t\t\t\t\t\t\t\t\t\tDelete \n\t\t\t\t\t\t\t\t\t\t\t\t</button> \n\t\t\t\t\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t\t\t\t\t</tr> \n\t\t\t\t\t\t\t\t\t))} \n\t\t\t\t\t\t\t\t</tbody> \n\t\t\t\t\t\t\t) : ( \n\t\t\t\t\t\t\t\t<tbody> \n\t\t\t\t\t\t\t\t\t<tr> \n\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\">Loading products...</td> \n\t\t\t\t\t\t\t\t\t</tr> \n\t\t\t\t\t\t\t\t</tbody> \n\t\t\t\t\t\t\t)} \n\n\n\t\t\t\t\t\t</table> \n\t\t\t\t\t</div> \n\t\t\t\t</div> \n\t\t\t\t<div className=\"col-md-5\"> \n\t\t\t\t\t<h2 className=\"text-center\">Add Task</h2> \n\t\t\t\t\t<form className=\"bg-light p-4\"> \n\t\t\t\t\t\t<div className=\"mb-3\"> \n\t\t\t\t\t\t\t<label>Task</label> \n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Task\"\n\t\t\t\t\t\t\t\tonChange={(e) => setNewTask(e.target.value)} \n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<div className=\"mb-3\"> \n\t\t\t\t\t\t\t<label>Status</label> \n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Status\"\n\t\t\t\t\t\t\t\tonChange={(e) => setNewStatus(e.target.value)} \n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<div className=\"mb-3\"> \n\t\t\t\t\t\t\t<label>Deadline</label> \n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\tonChange={(e) => setNewDeadline(e.target.value)} \n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<button onClick={addTask} className=\"btn btn-success btn-sm\"> \n\t\t\t\t\t\t\tAdd Task \n\t\t\t\t\t\t</button> \n\t\t\t\t\t</form> \n\t\t\t\t</div> \n\n\t\t\t</div> \n\t\t</div> \n\t) \n} \nexport default Todo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}